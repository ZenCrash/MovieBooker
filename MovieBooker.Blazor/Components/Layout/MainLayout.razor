@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using Microsoft.AspNetCore.Identity
@using MovieBooker.DataAccess.Model

@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject SignInManager<User> SignInManager

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            @* <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a> *@
            <AuthorizeView>
                <Authorized>
                    <span aria-hidden="true">Welcome, @email</span>
                    @* <button class="btn btn-link" @onclick="OnLogout">Logout</button> *@
                    <NavLink class="nav-link" href="Logout">
                        <span aria-hidden="true">Logout</span>
                    </NavLink>
                </Authorized>
                <NotAuthorized>
                    <NavLink class="nav-link" href="Login">
                        <span aria-hidden="true">Login</span>
                    </NavLink>
                    <NavLink class="nav-link" href="Register">
                        <span aria-hidden="true">Register</span>
                    </NavLink>
                </NotAuthorized>
            </AuthorizeView>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private string email;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            email = user.FindFirst(c => c.Type == ClaimTypes.Email)?.Value;
        }
    }
}